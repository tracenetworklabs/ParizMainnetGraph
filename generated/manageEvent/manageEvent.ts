// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AgendaAdded extends ethereum.Event {
  get params(): AgendaAdded__Params {
    return new AgendaAdded__Params(this);
  }
}

export class AgendaAdded__Params {
  _event: AgendaAdded;

  constructor(event: AgendaAdded) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get agendaStartTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get agendaEndTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get agendaName(): string {
    return this._event.parameters[4].value.toString();
  }

  get guestName(): Array<string> {
    return this._event.parameters[5].value.toStringArray();
  }

  get guestAddress(): Array<string> {
    return this._event.parameters[6].value.toStringArray();
  }

  get initiateStatus(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class AgendaDeleted extends ethereum.Event {
  get params(): AgendaDeleted__Params {
    return new AgendaDeleted__Params(this);
  }
}

export class AgendaDeleted__Params {
  _event: AgendaDeleted;

  constructor(event: AgendaDeleted) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get deletedStatus(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AgendaStarted extends ethereum.Event {
  get params(): AgendaStarted__Params {
    return new AgendaStarted__Params(this);
  }
}

export class AgendaStarted__Params {
  _event: AgendaStarted;

  constructor(event: AgendaStarted) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AgendaUpdated extends ethereum.Event {
  get params(): AgendaUpdated__Params {
    return new AgendaUpdated__Params(this);
  }
}

export class AgendaUpdated__Params {
  _event: AgendaUpdated;

  constructor(event: AgendaUpdated) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get agendaStartTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get agendaEndTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get agenda(): string {
    return this._event.parameters[4].value.toString();
  }

  get guestName(): Array<string> {
    return this._event.parameters[5].value.toStringArray();
  }

  get guestAddress(): Array<string> {
    return this._event.parameters[6].value.toStringArray();
  }

  get initiateStatus(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class EventCancelled extends ethereum.Event {
  get params(): EventCancelled__Params {
    return new EventCancelled__Params(this);
  }
}

export class EventCancelled__Params {
  _event: EventCancelled;

  constructor(event: EventCancelled) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EventCompleted extends ethereum.Event {
  get params(): EventCompleted__Params {
    return new EventCompleted__Params(this);
  }
}

export class EventCompleted__Params {
  _event: EventCompleted;

  constructor(event: EventCompleted) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EventEnded extends ethereum.Event {
  get params(): EventEnded__Params {
    return new EventEnded__Params(this);
  }
}

export class EventEnded__Params {
  _event: EventEnded;

  constructor(event: EventEnded) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EventStarted extends ethereum.Event {
  get params(): EventStarted__Params {
    return new EventStarted__Params(this);
  }
}

export class EventStarted__Params {
  _event: EventStarted;

  constructor(event: EventStarted) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Exited extends ethereum.Event {
  get params(): Exited__Params {
    return new Exited__Params(this);
  }
}

export class Exited__Params {
  _event: Exited;

  constructor(event: Exited) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get leavingTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ticketId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TicketFeesClaimed extends ethereum.Event {
  get params(): TicketFeesClaimed__Params {
    return new TicketFeesClaimed__Params(this);
  }
}

export class TicketFeesClaimed__Params {
  _event: TicketFeesClaimed;

  constructor(event: TicketFeesClaimed) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get eventOrganiser(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenAddress(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class TicketFeesRefund extends ethereum.Event {
  get params(): TicketFeesRefund__Params {
    return new TicketFeesRefund__Params(this);
  }
}

export class TicketFeesRefund__Params {
  _event: TicketFeesRefund;

  constructor(event: TicketFeesRefund) {
    this._event = event;
  }

  get eventTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class manageEvent__getAgendaInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: string;
  value4: i32;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: string,
    value4: i32,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getAgendaId(): BigInt {
    return this.value0;
  }

  getAgendaStartTime(): BigInt {
    return this.value1;
  }

  getAgendaEndTime(): BigInt {
    return this.value2;
  }

  getAgendaName(): string {
    return this.value3;
  }

  getInitiateStatus(): i32 {
    return this.value4;
  }

  getIsAgendaDeleted(): boolean {
    return this.value5;
  }
}

export class manageEvent extends ethereum.SmartContract {
  static bind(address: Address): manageEvent {
    return new manageEvent("manageEvent", address);
  }

  adminContract(): Address {
    let result = super.call("adminContract", "adminContract():(address)", []);

    return result[0].toAddress();
  }

  try_adminContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "adminContract",
      "adminContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  agendaInEvents(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "agendaInEvents",
      "agendaInEvents(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_agendaInEvents(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "agendaInEvents",
      "agendaInEvents(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimERC20TicketStatus(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "claimERC20TicketStatus",
      "claimERC20TicketStatus(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_claimERC20TicketStatus(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimERC20TicketStatus",
      "claimERC20TicketStatus(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  claimERC721TicketStatus(param0: BigInt, param1: BigInt): boolean {
    let result = super.call(
      "claimERC721TicketStatus",
      "claimERC721TicketStatus(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_claimERC721TicketStatus(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimERC721TicketStatus",
      "claimERC721TicketStatus(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eventCancelledStatus(param0: BigInt): boolean {
    let result = super.call(
      "eventCancelledStatus",
      "eventCancelledStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_eventCancelledStatus(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "eventCancelledStatus",
      "eventCancelledStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eventCompletedStatus(param0: BigInt): boolean {
    let result = super.call(
      "eventCompletedStatus",
      "eventCompletedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_eventCompletedStatus(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "eventCompletedStatus",
      "eventCompletedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eventEndedStatus(param0: BigInt): boolean {
    let result = super.call(
      "eventEndedStatus",
      "eventEndedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_eventEndedStatus(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "eventEndedStatus",
      "eventEndedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eventStartedStatus(param0: BigInt): boolean {
    let result = super.call(
      "eventStartedStatus",
      "eventStartedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_eventStartedStatus(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "eventStartedStatus",
      "eventStartedStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exitEventStatus(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "exitEventStatus",
      "exitEventStatus(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_exitEventStatus(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "exitEventStatus",
      "exitEventStatus(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAgendaInfo(
    param0: BigInt,
    param1: BigInt
  ): manageEvent__getAgendaInfoResult {
    let result = super.call(
      "getAgendaInfo",
      "getAgendaInfo(uint256,uint256):(uint256,uint256,uint256,string,uint8,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new manageEvent__getAgendaInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toI32(),
      result[5].toBoolean()
    );
  }

  try_getAgendaInfo(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<manageEvent__getAgendaInfoResult> {
    let result = super.tryCall(
      "getAgendaInfo",
      "getAgendaInfo(uint256,uint256):(uint256,uint256,uint256,string,uint8,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new manageEvent__getAgendaInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toI32(),
        value[5].toBoolean()
      )
    );
  }

  isEventCancelled(eventId: BigInt): boolean {
    let result = super.call(
      "isEventCancelled",
      "isEventCancelled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(eventId)]
    );

    return result[0].toBoolean();
  }

  try_isEventCancelled(eventId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEventCancelled",
      "isEventCancelled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(eventId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isEventEnded(eventId: BigInt): boolean {
    let result = super.call("isEventEnded", "isEventEnded(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(eventId)
    ]);

    return result[0].toBoolean();
  }

  try_isEventEnded(eventId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isEventEnded", "isEventEnded(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(eventId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isEventStarted(eventId: BigInt): boolean {
    let result = super.call(
      "isEventStarted",
      "isEventStarted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(eventId)]
    );

    return result[0].toBoolean();
  }

  try_isEventStarted(eventId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEventStarted",
      "isEventStarted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(eventId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  noOfAgendas(param0: BigInt): BigInt {
    let result = super.call("noOfAgendas", "noOfAgendas(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_noOfAgendas(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "noOfAgendas",
      "noOfAgendas(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  refundTicketFeesStatus(param0: BigInt, param1: BigInt): boolean {
    let result = super.call(
      "refundTicketFeesStatus",
      "refundTicketFeesStatus(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_refundTicketFeesStatus(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "refundTicketFeesStatus",
      "refundTicketFeesStatus(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddAgendaCall extends ethereum.Call {
  get inputs(): AddAgendaCall__Inputs {
    return new AddAgendaCall__Inputs(this);
  }

  get outputs(): AddAgendaCall__Outputs {
    return new AddAgendaCall__Outputs(this);
  }
}

export class AddAgendaCall__Inputs {
  _call: AddAgendaCall;

  constructor(call: AddAgendaCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get agendaStartTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get agendaEndTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get agendaName(): string {
    return this._call.inputValues[3].value.toString();
  }

  get guestName(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }

  get guestAddress(): Array<string> {
    return this._call.inputValues[5].value.toStringArray();
  }

  get initiateStatus(): i32 {
    return this._call.inputValues[6].value.toI32();
  }
}

export class AddAgendaCall__Outputs {
  _call: AddAgendaCall;

  constructor(call: AddAgendaCall) {
    this._call = call;
  }
}

export class CancelEventCall extends ethereum.Call {
  get inputs(): CancelEventCall__Inputs {
    return new CancelEventCall__Inputs(this);
  }

  get outputs(): CancelEventCall__Outputs {
    return new CancelEventCall__Outputs(this);
  }
}

export class CancelEventCall__Inputs {
  _call: CancelEventCall;

  constructor(call: CancelEventCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelEventCall__Outputs {
  _call: CancelEventCall;

  constructor(call: CancelEventCall) {
    this._call = call;
  }
}

export class ClaimTicketFeesCall extends ethereum.Call {
  get inputs(): ClaimTicketFeesCall__Inputs {
    return new ClaimTicketFeesCall__Inputs(this);
  }

  get outputs(): ClaimTicketFeesCall__Outputs {
    return new ClaimTicketFeesCall__Outputs(this);
  }
}

export class ClaimTicketFeesCall__Inputs {
  _call: ClaimTicketFeesCall;

  constructor(call: ClaimTicketFeesCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenAddress(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ClaimTicketFeesCall__Outputs {
  _call: ClaimTicketFeesCall;

  constructor(call: ClaimTicketFeesCall) {
    this._call = call;
  }
}

export class CompleteCall extends ethereum.Call {
  get inputs(): CompleteCall__Inputs {
    return new CompleteCall__Inputs(this);
  }

  get outputs(): CompleteCall__Outputs {
    return new CompleteCall__Outputs(this);
  }
}

export class CompleteCall__Inputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CompleteCall__Outputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }
}

export class DeleteAgendaCall extends ethereum.Call {
  get inputs(): DeleteAgendaCall__Inputs {
    return new DeleteAgendaCall__Inputs(this);
  }

  get outputs(): DeleteAgendaCall__Outputs {
    return new DeleteAgendaCall__Outputs(this);
  }
}

export class DeleteAgendaCall__Inputs {
  _call: DeleteAgendaCall;

  constructor(call: DeleteAgendaCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeleteAgendaCall__Outputs {
  _call: DeleteAgendaCall;

  constructor(call: DeleteAgendaCall) {
    this._call = call;
  }
}

export class EndCall extends ethereum.Call {
  get inputs(): EndCall__Inputs {
    return new EndCall__Inputs(this);
  }

  get outputs(): EndCall__Outputs {
    return new EndCall__Outputs(this);
  }
}

export class EndCall__Inputs {
  _call: EndCall;

  constructor(call: EndCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndCall__Outputs {
  _call: EndCall;

  constructor(call: EndCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitiateSessionCall extends ethereum.Call {
  get inputs(): InitiateSessionCall__Inputs {
    return new InitiateSessionCall__Inputs(this);
  }

  get outputs(): InitiateSessionCall__Outputs {
    return new InitiateSessionCall__Outputs(this);
  }
}

export class InitiateSessionCall__Inputs {
  _call: InitiateSessionCall;

  constructor(call: InitiateSessionCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitiateSessionCall__Outputs {
  _call: InitiateSessionCall;

  constructor(call: InitiateSessionCall) {
    this._call = call;
  }
}

export class RefundTicketFeesCall extends ethereum.Call {
  get inputs(): RefundTicketFeesCall__Inputs {
    return new RefundTicketFeesCall__Inputs(this);
  }

  get outputs(): RefundTicketFeesCall__Outputs {
    return new RefundTicketFeesCall__Outputs(this);
  }
}

export class RefundTicketFeesCall__Inputs {
  _call: RefundTicketFeesCall;

  constructor(call: RefundTicketFeesCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ticketIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RefundTicketFeesCall__Outputs {
  _call: RefundTicketFeesCall;

  constructor(call: RefundTicketFeesCall) {
    this._call = call;
  }
}

export class StartEventCall extends ethereum.Call {
  get inputs(): StartEventCall__Inputs {
    return new StartEventCall__Inputs(this);
  }

  get outputs(): StartEventCall__Outputs {
    return new StartEventCall__Outputs(this);
  }
}

export class StartEventCall__Inputs {
  _call: StartEventCall;

  constructor(call: StartEventCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartEventCall__Outputs {
  _call: StartEventCall;

  constructor(call: StartEventCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAdminContractCall extends ethereum.Call {
  get inputs(): UpdateAdminContractCall__Inputs {
    return new UpdateAdminContractCall__Inputs(this);
  }

  get outputs(): UpdateAdminContractCall__Outputs {
    return new UpdateAdminContractCall__Outputs(this);
  }
}

export class UpdateAdminContractCall__Inputs {
  _call: UpdateAdminContractCall;

  constructor(call: UpdateAdminContractCall) {
    this._call = call;
  }

  get _adminContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateAdminContractCall__Outputs {
  _call: UpdateAdminContractCall;

  constructor(call: UpdateAdminContractCall) {
    this._call = call;
  }
}

export class UpdateAgendaCall extends ethereum.Call {
  get inputs(): UpdateAgendaCall__Inputs {
    return new UpdateAgendaCall__Inputs(this);
  }

  get outputs(): UpdateAgendaCall__Outputs {
    return new UpdateAgendaCall__Outputs(this);
  }
}

export class UpdateAgendaCall__Inputs {
  _call: UpdateAgendaCall;

  constructor(call: UpdateAgendaCall) {
    this._call = call;
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get agendaId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get agendaStartTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get agendaEndTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get agendaName(): string {
    return this._call.inputValues[4].value.toString();
  }

  get guestName(): Array<string> {
    return this._call.inputValues[5].value.toStringArray();
  }

  get guestAddress(): Array<string> {
    return this._call.inputValues[6].value.toStringArray();
  }

  get initiateStatus(): i32 {
    return this._call.inputValues[7].value.toI32();
  }
}

export class UpdateAgendaCall__Outputs {
  _call: UpdateAgendaCall;

  constructor(call: UpdateAgendaCall) {
    this._call = call;
  }
}

export class UserExitEventCall extends ethereum.Call {
  get inputs(): UserExitEventCall__Inputs {
    return new UserExitEventCall__Inputs(this);
  }

  get outputs(): UserExitEventCall__Outputs {
    return new UserExitEventCall__Outputs(this);
  }
}

export class UserExitEventCall__Inputs {
  _call: UserExitEventCall;

  constructor(call: UserExitEventCall) {
    this._call = call;
  }

  get signature(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get ticketHolder(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get eventTokenId(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get ticketId(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get exitTime(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class UserExitEventCall__Outputs {
  _call: UserExitEventCall;

  constructor(call: UserExitEventCall) {
    this._call = call;
  }
}
